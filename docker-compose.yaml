version: '2'
services:
  nginx:
    build: ./nginx
    networks:
      - backend
      - frontend
    ports:
      - "80:80"
    links:
      - daphne
    depends_on:
      - daphne
      - worker
    environment:
       DAPHNE_HOST: daphne
    volumes_from:
      - daphne
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=cnluser
      - POSTGRES_PASSWORD=temporary
      - POSTGRES_DB=codingnightlive
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d:ro  # Read ./postgres/*.sh and run it as initializing steps.
      - ./postgres_db:/var/lib/postgresql/data:rw  # ./postgres_db will be used as database.
    ports:
      - "5432:5432"  # for SANDBOX
    networks:
      - backend
  redis:
    image: redis
    networks:
      - backend
    ports:
      - "6379:6379"  # for SANDBOX
  worker:
    build: .
    working_dir: /opt/coding-night-live
    command: bash -c "python manage.py runworker"
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
    networks:
      - frontend
      - backend
    depends_on:
      - redis
      - postgres
    links:
      - redis
      - postgres
  daphne:
    build: .
    working_dir: /opt/coding-night-live
    command: bash -c "daphne -b 0.0.0.0 -p 8000 coding_night_live.asgi:channel_layer"
    ports:
      - "8000:8000"  # for SANDBOX
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - IS_HTTPS_IN_FRONT_OF_NGINX=False  # for SANDBOX, if not True.
    networks:
     - frontend
     - backend
    depends_on:
      - redis
      - postgres
    links:
      - redis
      - postgres
    volumes:
      - /opt/coding-night-live/collected_static
networks:
  frontend:  # exposed
  backend:  # not exposed (DO NOT OPEN THESE PORTS)
